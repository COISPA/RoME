d$ratio <- d$WEIGHT_OF_THE_FRACTION / d$WEIGHT_OF_THE_SAMPLE_MEASURED
numb <- tb[i, c("NB_OF_FEMALES","NB_OF_MALES","NB_OF_UNDETERMINED")]
if (nrow(d)>0) {
if (sum(d$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE) == totn &
sum(nF+nM+nN)==totn) {
if (sum(d[d$SEX=="N","NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE"])==totn) {
if (length(numb[numb>0])>1 ){  # & all(!names(numb)[which(numb==numb[numb>0])] %in% c("NB_OF_UNDETERMINED"))
tb$NB_OF_FEMALES[i] <- 0
tb$NB_OF_MALES[i] <- 0
tb$NB_OF_UNDETERMINED[i] <- totn
} else if (length(numb[numb>0])==1 & all(!names(numb)[which(numb[numb>0]>1)] %in% c("NB_OF_UNDETERMINED"))) {
var <- names(numb)[which(numb==numb[numb>0])]
if (var == "NB_OF_FEMALES"){
tc[tc$YEAR == year & tc$HAUL_NUMBER==haul & tc$GENUS==genus & tc$SPECIES==species,"SEX" ] <- "F"
} else if (var == "NB_OF_MALES") {
tc[tc$YEAR == year & tc$HAUL_NUMBER==haul & tc$GENUS==genus & tc$SPECIES==species,"SEX" ] <- "M"
}
}
}
}
}
# else if(nrow(d)==0) {
# cat(paste0("\nThe species ",genus,species," is not included in the TC (record TB: ",i,")"))
# }
pb$tick()
}
rm(list=ls())
# load libraries
library(RoME)
# set GSA for the analysis
GSA <- 19
# set working directory (where results are saved)
wd <- "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME"
# load data files (TA, TB and TC)
ta <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv"), sep=";")
tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TB_GSA",GSA,".csv"), sep=";")
tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TC_GSA",GSA,".csv"), sep=";")
te <- NA
tl <- NA
# data filtering for the selected GSA
ta <- ta[ta$AREA ==GSA, ]
tb <- tb[tb$AREA ==GSA, ]
tc <- tc[tc$AREA ==GSA, ]
# definition of default tables and variables used in the analysis
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
# creation of sub-folder for results by GSA
gsa.dir <- file.path(wd, paste0("GSA",GSA,"_corrected"))
if (file.exists(gsa.dir)){
print(paste0("The folder '",paste0("GSA",GSA),"' was already created."))
} else {
dir.create(gsa.dir, showWarnings = FALSE)
print(paste0("The folder '",paste0("GSA",GSA),"' has been created."))
}
setwd(gsa.dir)
ta$BOTTOM_TEMPERATURE_BEGINNING <- as.numeric(ta$BOTTOM_TEMPERATURE_BEGINNING)
ta$BOTTOM_TEMPERATURE_END <- as.numeric(ta$BOTTOM_TEMPERATURE_END)
ta$BOTTOM_SALINITY_BEGINNING <- as.numeric(ta$BOTTOM_SALINITY_BEGINNING)
ta$BOTTOM_SALINITY_END <- as.numeric(ta$BOTTOM_SALINITY_END)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
ta$SHOOTING_DEPTH <- as.integer(ta$SHOOTING_DEPTH)
ta$HAULING_TIME <- as.integer(ta$HAULING_TIME)
ta$HAULING_DEPTH <- as.integer(ta$HAULING_DEPTH)
ta$DISTANCE <- as.integer(ta$DISTANCE)
ta$VERTICAL_OPENING <- as.integer(ta$VERTICAL_OPENING)
ta$WING_OPENING <- as.integer(ta$WING_OPENING)
ta$WARP_LENGTH <- as.integer(ta$WARP_LENGTH)
ta$OBSERVATIONS <- as.integer(ta$OBSERVATIONS)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
tb$TOTAL_WEIGHT_IN_THE_HAUL <- as.integer(tb$TOTAL_WEIGHT_IN_THE_HAUL)
tc$WEIGHT_OF_THE_FRACTION <- as.integer(tc$WEIGHT_OF_THE_FRACTION)
tc$WEIGHT_OF_THE_SAMPLE_MEASURED <- as.integer(tc$WEIGHT_OF_THE_SAMPLE_MEASURED)
tc$LENGTH_CLASS <- as.integer(tc$LENGTH_CLASS)
tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE <- as.integer(tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE )
################ NON MODIFICARE #############
library(progress)
pb <- progress_bar$new(total = nrow(tb))
i=106
for (i in 1:nrow(tb)) {
year <- tb[i, "YEAR"]
haul <- tb[i, "HAUL_NUMBER"]
genus <- tb[i,"GENUS"]
species <- tb[i, "SPECIES"]
totw <- tb$TOTAL_WEIGHT_IN_THE_HAUL[i]
totn <- tb$TOTAL_NUMBER_IN_THE_HAUL[i]
nF <- tb$NB_OF_FEMALES[i]
nM <- tb$NB_OF_MALES[i]
nN <- tb$NB_OF_UNDETERMINED[i]
d <- tc[tc$YEAR == year & tc$HAUL_NUMBER==haul & tc$GENUS==genus & tc$SPECIES==species, ]
d$ratio <- d$WEIGHT_OF_THE_FRACTION / d$WEIGHT_OF_THE_SAMPLE_MEASURED
numb <- tb[i, c("NB_OF_FEMALES","NB_OF_MALES","NB_OF_UNDETERMINED")]
if (nrow(d)>0) {
if (sum(d$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE) == totn &
sum(nF+nM+nN)==totn) {
if (sum(d[d$SEX=="N","NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE"])==totn) {
if (length(numb[numb>0])>1 ){  # & all(!names(numb)[which(numb==numb[numb>0])] %in% c("NB_OF_UNDETERMINED"))
tb$NB_OF_FEMALES[i] <- 0
tb$NB_OF_MALES[i] <- 0
tb$NB_OF_UNDETERMINED[i] <- totn
} else if (length(numb[numb>0])==1 & all(!names(numb)[which(numb[numb>0]>1)] %in% c("NB_OF_UNDETERMINED"))) {
var <- names(numb)[which(numb==numb[numb>0])]
if (var == "NB_OF_FEMALES"){
tc[tc$YEAR == year & tc$HAUL_NUMBER==haul & tc$GENUS==genus & tc$SPECIES==species,"SEX" ] <- "F"
} else if (var == "NB_OF_MALES") {
tc[tc$YEAR == year & tc$HAUL_NUMBER==haul & tc$GENUS==genus & tc$SPECIES==species,"SEX" ] <- "M"
}
}
}
}
}
# else if(nrow(d)==0) {
# cat(paste0("\nThe species ",genus,species," is not included in the TC (record TB: ",i,")"))
# }
pb$tick()
}
write.table(tb, paste0(gsa.dir,"\\TB_GSA",GSA,".csv"),sep=";",row.names=FALSE)
write.table(tc, paste0(gsa.dir,"\\TC_GSA",GSA,".csv"),sep=";",row.names=FALSE)
rm(list=ls())
# load libraries
library(RoME)
# set GSA for the analysis
GSA <- 19
# set working directory (where results are saved)
wd <- "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME"
# load data files (TA, TB and TC)
ta <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv"), sep=";")
tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TB_GSA",GSA,".csv"), sep=";")
tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TC_GSA",GSA,".csv"), sep=";")
# tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME/GSA19_corrected/tb_corrected.csv"), sep=";")
# tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME/GSA19_corrected/tc_corrected.csv"), sep=";")
te <- NA
tl <- NA
# data filtering for the selected GSA
ta <- ta[ta$AREA ==GSA, ]
tb <- tb[tb$AREA ==GSA, ]
tc <- tc[tc$AREA ==GSA, ]
# definition of default tables and variables used in the analysis
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
# creation of sub-folder for results by GSA
gsa.dir <- file.path(wd, paste0("GSA",GSA))
if (file.exists(gsa.dir)){
print(paste0("The folder '",paste0("GSA",GSA),"' was already created."))
} else {
dir.create(gsa.dir, showWarnings = FALSE)
print(paste0("The folder '",paste0("GSA",GSA),"' has been created."))
}
setwd(gsa.dir)
ta$BOTTOM_TEMPERATURE_BEGINNING <- as.numeric(ta$BOTTOM_TEMPERATURE_BEGINNING)
ta$BOTTOM_TEMPERATURE_END <- as.numeric(ta$BOTTOM_TEMPERATURE_END)
ta$BOTTOM_SALINITY_BEGINNING <- as.numeric(ta$BOTTOM_SALINITY_BEGINNING)
ta$BOTTOM_SALINITY_END <- as.numeric(ta$BOTTOM_SALINITY_END)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
ta$SHOOTING_DEPTH <- as.integer(ta$SHOOTING_DEPTH)
ta$HAULING_TIME <- as.integer(ta$HAULING_TIME)
ta$HAULING_DEPTH <- as.integer(ta$HAULING_DEPTH)
ta$DISTANCE <- as.integer(ta$DISTANCE)
ta$VERTICAL_OPENING <- as.integer(ta$VERTICAL_OPENING)
ta$WING_OPENING <- as.integer(ta$WING_OPENING)
ta$WARP_LENGTH <- as.integer(ta$WARP_LENGTH)
ta$OBSERVATIONS <- as.integer(ta$OBSERVATIONS)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
tb$TOTAL_WEIGHT_IN_THE_HAUL <- as.integer(tb$TOTAL_WEIGHT_IN_THE_HAUL)
tc$WEIGHT_OF_THE_FRACTION <- as.integer(tc$WEIGHT_OF_THE_FRACTION)
tc$WEIGHT_OF_THE_SAMPLE_MEASURED <- as.integer(tc$WEIGHT_OF_THE_SAMPLE_MEASURED)
tc$LENGTH_CLASS <- as.integer(tc$LENGTH_CLASS)
tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE <- as.integer(tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE )
################ NON MODIFICARE #############
RoMEcc(TA=ta,
TB=tb,
TC=tc,
TE=te,
TL=tl,
wd=gsa.dir,
suffix=NA,
verbose=verbose,
Stratification=Stratification,
Ref_list=TM_list,
DataTargetSpecies=DataTargetSpecies,
Maturity=Maturity_parameters,
ab_parameters=ab_parameters,
stages_list=stages,
assTL=assTL)
rm(list=ls())
# load libraries
library(RoME)
# set GSA for the analysis
GSA <- 19
# set working directory (where results are saved)
wd <- "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME"
# load data files (TA, TB and TC)
ta <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv"), sep=";")
tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TB_GSA",GSA,".csv"), sep=";")
tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TC_GSA",GSA,".csv"), sep=";")
# tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME/GSA19_corrected/tb_corrected.csv"), sep=";")
# tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME/GSA19_corrected/tc_corrected.csv"), sep=";")
te <- NA
tl <- NA
# data filtering for the selected GSA
ta <- ta[ta$AREA ==GSA, ]
tb <- tb[tb$AREA ==GSA, ]
tc <- tc[tc$AREA ==GSA, ]
# definition of default tables and variables used in the analysis
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
# creation of sub-folder for results by GSA
gsa.dir <- file.path(wd, paste0("GSA",GSA))
if (file.exists(gsa.dir)){
print(paste0("The folder '",paste0("GSA",GSA),"' was already created."))
} else {
dir.create(gsa.dir, showWarnings = FALSE)
print(paste0("The folder '",paste0("GSA",GSA),"' has been created."))
}
setwd(gsa.dir)
ta$BOTTOM_TEMPERATURE_BEGINNING <- as.numeric(ta$BOTTOM_TEMPERATURE_BEGINNING)
ta$BOTTOM_TEMPERATURE_END <- as.numeric(ta$BOTTOM_TEMPERATURE_END)
ta$BOTTOM_SALINITY_BEGINNING <- as.numeric(ta$BOTTOM_SALINITY_BEGINNING)
ta$BOTTOM_SALINITY_END <- as.numeric(ta$BOTTOM_SALINITY_END)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
ta$SHOOTING_DEPTH <- as.integer(ta$SHOOTING_DEPTH)
ta$HAULING_TIME <- as.integer(ta$HAULING_TIME)
ta$HAULING_DEPTH <- as.integer(ta$HAULING_DEPTH)
ta$DISTANCE <- as.integer(ta$DISTANCE)
ta$VERTICAL_OPENING <- as.integer(ta$VERTICAL_OPENING)
ta$WING_OPENING <- as.integer(ta$WING_OPENING)
ta$WARP_LENGTH <- as.integer(ta$WARP_LENGTH)
ta$OBSERVATIONS <- as.integer(ta$OBSERVATIONS)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
tb$TOTAL_WEIGHT_IN_THE_HAUL <- as.integer(tb$TOTAL_WEIGHT_IN_THE_HAUL)
tc$WEIGHT_OF_THE_FRACTION <- as.integer(tc$WEIGHT_OF_THE_FRACTION)
tc$WEIGHT_OF_THE_SAMPLE_MEASURED <- as.integer(tc$WEIGHT_OF_THE_SAMPLE_MEASURED)
tc$LENGTH_CLASS <- as.integer(tc$LENGTH_CLASS)
tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE <- as.integer(tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE )
################ NON MODIFICARE #############
RoMEcc(TA=ta,
TB=tb,
TC=tc,
TE=te,
TL=tl,
wd=gsa.dir,
suffix=NA,
verbose=verbose,
Stratification=Stratification,
Ref_list=TM_list,
DataTargetSpecies=DataTargetSpecies,
Maturity=Maturity_parameters,
ab_parameters=ab_parameters,
stages_list=stages,
assTL=assTL)
tc <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data\\medits_tc.csv")
colnames(tc)
tc <- tc[,-c(1,24,25)]
tc <- data.frame(
TYPE_OF_FILE = tc$tf,
tc[,c(1:4)],
MONTH=tc[,c(20)],
DAY=tc[,c(21)],
tc[,c(5:7)],
tc[,c(22)],
tc[,c(8:16)],
tc[,c(18)],
tc[,c(17)]
)
colnames(tc) <- c(
"TYPE_OF_FILE",
"COUNTRY",
"AREA",
"VESSEL",
"YEAR",
"MONTH",
"DAY",
"HAUL_NUMBER",
"CODEND_CLOSING",
"PART_OF_THE_CODEND",
"FAUNISTIC_CATEGORY",
"GENUS",
"SPECIES",
"LENGTH_CLASSES_CODE",
"WEIGHT_OF_THE_FRACTION",
"WEIGHT_OF_THE_SAMPLE_MEASURED",
"SEX",
"NO_OF_INDIVIDUAL_OF_THE_ABOVE_SEX_MEASURED",
"LENGTH_CLASS",
"MATURITY",
"MATSUB",
"NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE"
)
head(tc)
write.table(tc, "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\- Appoggio -\\MTS\\MEDITS_HKE_MUT\\TC_MEDITS_FORMAT.csv",sep=";",row.names = FALSE)
ta <- read.csv("C:\\WKFISHDIS2_18_19\\data\MEDITS_data\\medits_ta.csv")
ta <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data\\medits_ta.csv")
ta
ta <- ta[,-c(1,42,43)]
ta <- data.frame(
TYPE_OF_FILE = ta$type_of_file,
ta[,c(1:11)],
PART_OF_THE_CODEND = ta[,40],
ta[,c(12:34)],
ta[,c(36:39)],
ta[,c(41:43)]
)
library(RoME)
ta <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data\\medits_ta.csv")
ta <- ta[,-c(1,42,43)]
colnames(ta)
rm(list=ls())
setwd("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA")
ta <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data/TA_MEDITS_FORMAT.csv", sep=";")
tb <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data/TB_MEDITS_FORMAT.csv", sep=";")
tc <- read.csv("C:\\WKFISHDIS2_18_19\\data\\MEDITS_data/TC_MEDITS_FORMAT.csv", sep=";")
ta$OBSERVATIONS <- as.numeric(ta$OBSERVATIONS)
ta$BOTTOM_TEMPERATURE_BEGINNING <- as.numeric(ta$BOTTOM_TEMPERATURE_BEGINNING)
ta$BOTTOM_TEMPERATURE_END <- as.numeric(ta$BOTTOM_TEMPERATURE_END)
ta$BOTTOM_SALINITY_BEGINNING <- as.numeric(ta$BOTTOM_SALINITY_BEGINNING)
ta$BOTTOM_SALINITY_END <- as.numeric(ta$BOTTOM_SALINITY_END)
ta[ta$MEASURING_SYSTEM=="" | is.na(ta$MEASURING_SYSTEM),"MEASURING_SYSTEM"] <- NA
ta[ta$BOTTOM_SALINITY_BEGINNING==-1 | is.na(ta$BOTTOM_SALINITY_BEGINNING),"BOTTOM_SALINITY_BEGINNING"] <- NA
ta[ta$BOTTOM_SALINITY_END==-1 | is.na(ta$BOTTOM_SALINITY_END),"BOTTOM_SALINITY_END"] <- NA
ta <- ta[ta$AREA %in% c(17,18),]
write.table(ta,"D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\- Appoggio -\\MTS\\MEDITS_HKE_MUT\\TA_17_18.csv",sep=";",row.names = FALSE)
tb <- tb[tb$AREA %in% c(17,18),]
tb <- tb[tb$GENUS %in% c("MULL","MERL"), ]
tb <- tb[tb$SPECIES %in% c("BAR","MER"), ]
summary(tb)
write.table(tb,"D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\- Appoggio -\\MTS\\MEDITS_HKE_MUT\\TB_17_18_HKE_MUT.csv",sep=";",row.names = FALSE)
unique(tc$LENGTH_CLASSES_CODE)
tc[tc$LENGTH_CLASSES_CODE=="m  ", "LENGTH_CLASSES_CODE"] <- "m"
tc[tc$LENGTH_CLASSES_CODE=="0  ", "LENGTH_CLASSES_CODE"] <- "0"
tc[tc$LENGTH_CLASSES_CODE=="1  ", "LENGTH_CLASSES_CODE"] <- "1"
tc= tc[tc$AREA %in% c(17,18),]
tc <- tc[tc$GENUS %in% c("MULL","MERL"), ]
tc <- tc[tc$SPECIES %in% c("BAR","MER"), ]
write.table(tc,"D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\- Appoggio -\\MTS\\MEDITS_HKE_MUT\\TC_17_18_HKE_MUT.csv",sep=";",row.names = FALSE)
Field = "MEASURING_SYSTEM"
Values = c("VA","SO","XA","SA","SI","CT","SB")
wd
wd <- tempdir() #"C:\\Users\\walte\\Documents\\GitHub\\RoME\\data TEST Neglia"
suffix=NA  # non modificare
year=2012
if (!file.exists(file.path(wd, "Logfiles"))){
dir.create(file.path(wd, "Logfiles"), recursive = TRUE, showWarnings = FALSE)
}
numberError = 0
if (!exists("suffix")){
suffix=paste(as.character(Sys.Date()),format(Sys.time(), "_time_h%Hm%Ms%OS0"),sep="")
}
Errors <- file.path(wd,"Logfiles",paste("Logfile_", suffix ,".dat",sep=""))
if (!file.exists(Errors)){
file.create(Errors)
}
### FILTERING DATA FOR THE SELECTED YEAR
arg <- "year"
if (!exists(arg)) {
stop(paste0("'",arg,"' argument should be provided"))
} else if (length(year)!= 1) {
stop(paste0("only one value should be provided for '",arg,"' argument"))
} else if (is.na(year)){
stop(paste0(arg," argument should be a numeric value"))
}
ResultData <- ResultData[ResultData$YEAR == year, ]
rm(list=ls())
# load libraries
library(RoME)
# set GSA for the analysis
GSA <- 19
# set working directory (where results are saved)
wd <- "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\01b_check MEDITS data with RoME"
# load data files (TA, TB and TC)
ta <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv"), sep=";")
tb <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TB_GSA",GSA,".csv"), sep=";")
tc <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TC_GSA",GSA,".csv"), sep=";")
te <- NA
tl <- NA
# data filtering for the selected GSA
ta <- ta[ta$AREA ==GSA, ]
tb <- tb[tb$AREA ==GSA, ]
tc <- tc[tc$AREA ==GSA, ]
# definition of default tables and variables used in the analysis
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
# creation of sub-folder for results by GSA
gsa.dir <- file.path(wd, paste0("GSA",GSA))
if (file.exists(gsa.dir)){
print(paste0("The folder '",paste0("GSA",GSA),"' was already created."))
} else {
dir.create(gsa.dir, showWarnings = FALSE)
print(paste0("The folder '",paste0("GSA",GSA),"' has been created."))
}
setwd(gsa.dir)
ta$BOTTOM_TEMPERATURE_BEGINNING <- as.numeric(ta$BOTTOM_TEMPERATURE_BEGINNING)
ta$BOTTOM_TEMPERATURE_END <- as.numeric(ta$BOTTOM_TEMPERATURE_END)
ta$BOTTOM_SALINITY_BEGINNING <- as.numeric(ta$BOTTOM_SALINITY_BEGINNING)
ta$BOTTOM_SALINITY_END <- as.numeric(ta$BOTTOM_SALINITY_END)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
ta$SHOOTING_DEPTH <- as.integer(ta$SHOOTING_DEPTH)
ta$HAULING_TIME <- as.integer(ta$HAULING_TIME)
ta$HAULING_DEPTH <- as.integer(ta$HAULING_DEPTH)
ta$DISTANCE <- as.integer(ta$DISTANCE)
ta$VERTICAL_OPENING <- as.integer(ta$VERTICAL_OPENING)
ta$WING_OPENING <- as.integer(ta$WING_OPENING)
ta$WARP_LENGTH <- as.integer(ta$WARP_LENGTH)
ta$OBSERVATIONS <- as.integer(ta$OBSERVATIONS)
ta$SHOOTING_TIME <- as.integer(ta$SHOOTING_TIME)
tb$TOTAL_WEIGHT_IN_THE_HAUL <- as.integer(tb$TOTAL_WEIGHT_IN_THE_HAUL)
tc$WEIGHT_OF_THE_FRACTION <- as.integer(tc$WEIGHT_OF_THE_FRACTION)
tc$WEIGHT_OF_THE_SAMPLE_MEASURED <- as.integer(tc$WEIGHT_OF_THE_SAMPLE_MEASURED)
tc$LENGTH_CLASS <- as.integer(tc$LENGTH_CLASS)
tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE <- as.integer(tc$NUMBER_OF_INDIVIDUALS_IN_THE_LENGTH_CLASS_AND_MATURITY_STAGE )
RoMEcc(TA=ta,
TB=tb,
TC=tc,
TE=te,
TL=tl,
wd=gsa.dir,
suffix=NA,
verbose=verbose,
Stratification=Stratification,
Ref_list=TM_list,
DataTargetSpecies=DataTargetSpecies,
Maturity=Maturity_parameters,
ab_parameters=ab_parameters,
stages_list=stages,
assTL=assTL)
wd <- tempdir() #"C:\\Users\\walte\\Documents\\GitHub\\RoME\\data TEST Neglia"
suffix=NA  # non modificare
ResultData <- ta
Field = "MEASURING_SYSTEM"
Values = c("VA","SO","XA","SA","SI","CT","SB")
year=1994
if (!file.exists(file.path(wd, "Logfiles"))){
dir.create(file.path(wd, "Logfiles"), recursive = TRUE, showWarnings = FALSE)
}
numberError = 0
if (!exists("suffix")){
suffix=paste(as.character(Sys.Date()),format(Sys.time(), "_time_h%Hm%Ms%OS0"),sep="")
}
Errors <- file.path(wd,"Logfiles",paste("Logfile_", suffix ,".dat",sep=""))
if (!file.exists(Errors)){
file.create(Errors)
}
### FILTERING DATA FOR THE SELECTED YEAR
arg <- "year"
if (!exists(arg)) {
stop(paste0("'",arg,"' argument should be provided"))
} else if (length(year)!= 1) {
stop(paste0("only one value should be provided for '",arg,"' argument"))
} else if (is.na(year)){
stop(paste0(arg," argument should be a numeric value"))
}
ResultData <- ResultData[ResultData$YEAR == year, ]
ResultData
Values = c("VA","SO","XA","SA","SI","CT","SB",NA)
if (!file.exists(file.path(wd, "Logfiles"))){
dir.create(file.path(wd, "Logfiles"), recursive = TRUE, showWarnings = FALSE)
}
numberError = 0
if (!exists("suffix")){
suffix=paste(as.character(Sys.Date()),format(Sys.time(), "_time_h%Hm%Ms%OS0"),sep="")
}
Errors <- file.path(wd,"Logfiles",paste("Logfile_", suffix ,".dat",sep=""))
if (!file.exists(Errors)){
file.create(Errors)
}
### FILTERING DATA FOR THE SELECTED YEAR
arg <- "year"
if (!exists(arg)) {
stop(paste0("'",arg,"' argument should be provided"))
} else if (length(year)!= 1) {
stop(paste0("only one value should be provided for '",arg,"' argument"))
} else if (is.na(year)){
stop(paste0(arg," argument should be a numeric value"))
}
ResultData <- ResultData[ResultData$YEAR == year, ]
ResultData
Result = ResultData
write(paste("\n----------- check dictionary for field:", Field, "-", Result$YEAR[1]), file = Errors, append = TRUE)
Valuesf
Valuesf <- factor(Values)
Valuesf
(any(is.na(Result[, which(colnames(Result)==Field)])))
Result[, which(colnames(Result)==Field)]
paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv")
# load data files (TA, TB and TC)
ta <- read.csv(paste0("D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\B-USEFUL\\_DATA_MED_\\MED_DATA\\Data for GSA\\TA-TB-TC\\TA_GSA",GSA,".csv"), sep=";")
ta
ta$MEASURING_SYSTEM
source("D:/OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L/B-USEFUL/_DATA_MED_/MED_DATA/R script/01b_check MEDITS data with RoME.r", echo=TRUE)
source("D:/OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L/B-USEFUL/_DATA_MED_/MED_DATA/R script/01b_check MEDITS data with RoME.r", echo=TRUE)
