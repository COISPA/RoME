ta <- headers.conversion(ta,"TA")
tb <- headers.conversion(tb,"TB")
tc <- headers.conversion(tc,"TC")
if ((all(is.na(te)) & length(te)==1) | (all(is.na(te))))
{
te <- NA
} else {
te <- headers.conversion(te,"TE")
}
if ((all(is.na(tl)) & length(tl)==1) | (all(is.na(tl)) ))
{
tl <- NA
} else {
tl <- headers.conversion(tl,"TL")
}
# variables definition
suffix <- NA
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
RoMEcc(TA=ta,
TB=tb,
TC=tc,
TE=te,
TL=tl,
wd=resdir,
suffix=suffix,
verbose=verbose,
Stratification=Stratification,
Ref_list=TM_list,
DataTargetSpecies=DataTargetSpecies,
Maturity=Maturity_parameters,
ab_parameters=ab_parameters,
stages_list=stages,
assTL=assTL)
resdir <- "D:\\OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L\\RDB\\RoME_RDBFIS\\data\\MEDITS_GSA7"
# variables definition
suffix <- NA
Stratification= RoME::stratification_scheme
Ref_list= RoME::TM_list
DataTargetSpecies=RoME::DataTargetSpecies
Maturity=RoME::Maturity_parameters
ab_parameters=RoME::LW
stages=RoME::mat_stages
assTL=RoME::assTL
verbose = TRUE
################ Do not modify the following code #############
RoMEcc(TA=ta,
TB=tb,
TC=tc,
TE=te,
TL=tl,
wd=resdir,
suffix=suffix,
verbose=verbose,
Stratification=Stratification,
Ref_list=TM_list,
DataTargetSpecies=DataTargetSpecies,
Maturity=Maturity_parameters,
ab_parameters=ab_parameters,
stages_list=stages,
assTL=assTL)
year <- 2021
DataTE <- te # RoME::TE # read.csv("~/GitHub/RoME/data/TE_2012-2018 _GSA18.csv", sep=";")
SPECIES <- NA
SEX <- NA
AREA <- NA
a <- NA
b <- NA
verbose <- FALSE
check_individual_weightTE(DataTE = te, LW = ab_parameters, year, wd = wd, suffix = suffix, verbose = TRUE)
oldpar <- par(no.readonly = TRUE)
on.exit(suppressWarnings(par(oldpar$mfraw)))
if (!file.exists(file.path(wd, "Logfiles"))) {
dir.create(file.path(wd, "Logfiles"), recursive = TRUE, showWarnings = FALSE)
}
if (!file.exists(file.path(wd, "Graphs"))) {
dir.create(file.path(wd, "Graphs"), showWarnings = FALSE)
}
numberError <- 0
if (!exists("suffix")) {
suffix <- paste(as.character(Sys.Date()), format(Sys.time(), "_time_h%Hm%Ms%OS0"), sep = "")
}
Errors <- file.path(wd, "Logfiles", paste("Logfile_", suffix, ".dat", sep = ""))
if (!file.exists(Errors)) {
file.create(Errors)
}
### FILTERING DATA FOR THE SELECTED YEAR
arg <- "year"
if (!exists(arg)) {
stop(paste0("'", arg, "' argument should be provided"))
} else if (length(year) != 1) {
stop(paste0("only one value should be provided for '", arg, "' argument"))
} else if (is.na(year)) {
stop(paste0(arg, " argument should be a numeric value"))
}
DataTE <- DataTE[DataTE$YEAR == year, ]
DataTE
TE <- DataTE[!is.na(DataTE$AREA),]
TE
write(paste("\n----------- check consistency individual weights in TE - ", TE$YEAR[1]), file = Errors, append = TRUE)
numberError <- 0
numberError_ <- 0
TE_ND <- TE[as.character(TE$INDIVIDUAL_WEIGHT) == "ND", ] # selection on the weight ND
TE_ND$Species <- paste(TE_ND$GENUS, TE_ND$SPECIES)
species <- unique(TE_ND$Species)
list_g1_g2 <- RoME::list_g1_g2
G1 <- data.frame(as.character(list_g1_g2[!is.na(list_g1_g2$MEDITS_G1), "CODE"]))
for (spe in species) {
if ((spe %in% G1[, 1])) {
write(paste("For G1 species the individual weight in TE is mandatory. Please check,", spe), file = Errors, append = TRUE)
numberError_ <- numberError_ + 1
}
}
spe
species
TE <- TE[as.character(TE$INDIVIDUAL_WEIGHT) != "ND", ] # selection on the weight different from ND
TE
class(LW)
if (class(LW) != "data.frame") {
if (all(is.na(LW))) {
if (verbose) {
message("a and b parameters extracted from RoME LW table")
}
LW <- RoME::LW
}
}
LW
TE$mean_weight <- NA
TE$perc_diff <- NA
species_to_plot <- as.character(unique(LW[, "SPECIES"])) # LW$AREA == TE$AREA[1]
species_to_plot
i <- 1
for (i in 1:nrow(TE)) {
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "m") {
mean_length <- TE$LENGTH_CLASS[i] + 0.5
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "0") { # step: 0.5 cm
mean_length <- (TE$LENGTH_CLASS[i] + 2.5) / 10
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "1") { # step: 1 cm
mean_length <- (TE$LENGTH_CLASS[i] + 5) / 10
}
mean_weight <- A * mean_length^B
TE$mean_length[i] <- mean_length
TE$mean_weight[i] <- mean_weight # estimated weight
TE$perc_diff[i] <- (as.numeric(as.character(TE$INDIVIDUAL_WEIGHT[i])) - TE$mean_weight[i]) / as.numeric(as.character(TE$mean_weight[i])) * 100
if (abs(TE$perc_diff[i]) > 20) {
numberError <- numberError + 1
}
}
}
numberError
# scatter plots
# ii=26
for (ii in 1:length(species_to_plot)) {
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
if (nrow(TE_temp1) != 0) {
# tiff(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".tif", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 300, compression = "lzw", pointsize = 1 / 300)
jpeg(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".jpeg", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 200, quality=80)
par(mfrow = c(3, 1))
}
sex="F"
for (sex in c("M", "F", "I")) {
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
if (nrow(TE_temp) != 0) {
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
if (as.character(TE_temp$LENGTH_CLASSES_CODE[1]) == "m") {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (mm)", ylab = "weight (g)")
} else {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
}
lines(xx, yy, col = "blue")
}
} # fine sex
if (nrow(TE_temp1) != 0) {
dev.off()
}
} # fine ciclo for
ii
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
TE_temp1
species_to_plot[ii]
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
(nrow(TE_temp1) != 0)
sex="F"
for (sex in c("M", "F", "I")) {
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
if (nrow(TE_temp) != 0) {
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
if (as.character(TE_temp$LENGTH_CLASSES_CODE[1]) == "m") {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (mm)", ylab = "weight (g)")
} else {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
}
lines(xx, yy, col = "blue")
}
} # fine sex
TE$SEX
for (sex in c("M", "F", "I","N")) {
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
if (nrow(TE_temp) != 0) {
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
if (as.character(TE_temp$LENGTH_CLASSES_CODE[1]) == "m") {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (mm)", ylab = "weight (g)")
} else {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
}
lines(xx, yy, col = "blue")
}
} # fine sex
sex
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
TE_temp
(nrow(TE_temp) != 0)
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
ab
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
xx
TE_temp$mean_length
TE_temp
mean_length
mean_weight
TE$mean_length
mean_length
i
for (i in 1:nrow(TE)) {
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "m") {
mean_length <- TE$LENGTH_CLASS[i] + 0.5
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "0") { # step: 0.5 cm
mean_length <- (TE$LENGTH_CLASS[i] + 2.5) / 10
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "1") { # step: 1 cm
mean_length <- (TE$LENGTH_CLASS[i] + 5) / 10
}
mean_weight <- A * mean_length^B
TE$mean_length[i] <- mean_length
TE$mean_weight[i] <- mean_weight # estimated weight
TE$perc_diff[i] <- (as.numeric(as.character(TE$INDIVIDUAL_WEIGHT[i])) - TE$mean_weight[i]) / as.numeric(as.character(TE$mean_weight[i])) * 100
if (abs(TE$perc_diff[i]) > 20) {
numberError <- numberError + 1
}
}
}
TE$LENGTH_CLASS
unique(TE$LENGTH_CLASS)
TE$mean_length
summary(TE)
i <- 1
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
ab
(nrow(ab) != 0)
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "m") {
mean_length <- TE$LENGTH_CLASS[i] + 0.5
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "0") { # step: 0.5 cm
mean_length <- (TE$LENGTH_CLASS[i] + 2.5) / 10
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "1") { # step: 1 cm
mean_length <- (TE$LENGTH_CLASS[i] + 5) / 10
}
mean_weight <- A * mean_length^B
TE$mean_length[i] <- mean_length
TE$mean_weight[i] <- mean_weight # estimated weight
TE$perc_diff[i] <- (as.numeric(as.character(TE$INDIVIDUAL_WEIGHT[i])) - TE$mean_weight[i]) / as.numeric(as.character(TE$mean_weight[i])) * 100
if (abs(TE$perc_diff[i]) > 20) {
numberError <- numberError + 1
}
}
numberError
oldpar <- par(no.readonly = TRUE)
on.exit(suppressWarnings(par(oldpar$mfraw)))
if (!file.exists(file.path(wd, "Logfiles"))) {
dir.create(file.path(wd, "Logfiles"), recursive = TRUE, showWarnings = FALSE)
}
if (!file.exists(file.path(wd, "Graphs"))) {
dir.create(file.path(wd, "Graphs"), showWarnings = FALSE)
}
numberError <- 0
if (!exists("suffix")) {
suffix <- paste(as.character(Sys.Date()), format(Sys.time(), "_time_h%Hm%Ms%OS0"), sep = "")
}
Errors <- file.path(wd, "Logfiles", paste("Logfile_", suffix, ".dat", sep = ""))
if (!file.exists(Errors)) {
file.create(Errors)
}
### FILTERING DATA FOR THE SELECTED YEAR
arg <- "year"
if (!exists(arg)) {
stop(paste0("'", arg, "' argument should be provided"))
} else if (length(year) != 1) {
stop(paste0("only one value should be provided for '", arg, "' argument"))
} else if (is.na(year)) {
stop(paste0(arg, " argument should be a numeric value"))
}
DataTE <- DataTE[DataTE$YEAR == year, ]
########################################
TE <- DataTE[!is.na(DataTE$AREA),]
write(paste("\n----------- check consistency individual weights in TE - ", TE$YEAR[1]), file = Errors, append = TRUE)
numberError <- 0
numberError_ <- 0
TE_ND <- TE[as.character(TE$INDIVIDUAL_WEIGHT) == "ND", ] # selection on the weight ND
TE_ND$Species <- paste(TE_ND$GENUS, TE_ND$SPECIES)
species <- unique(TE_ND$Species)
list_g1_g2 <- RoME::list_g1_g2
G1 <- data.frame(as.character(list_g1_g2[!is.na(list_g1_g2$MEDITS_G1), "CODE"]))
for (spe in species) {
if ((spe %in% G1[, 1])) {
write(paste("For G1 species the individual weight in TE is mandatory. Please check,", spe), file = Errors, append = TRUE)
numberError_ <- numberError_ + 1
}
}
TE <- TE[as.character(TE$INDIVIDUAL_WEIGHT) != "ND", ] # selection on the weight different from ND
if (class(LW) != "data.frame") {
if (all(is.na(LW))) {
if (verbose) {
message("a and b parameters extracted from RoME LW table")
}
LW <- RoME::LW
}
}
TE$mean_weight <- NA
TE$perc_diff <- NA
species_to_plot <- as.character(unique(LW[, "SPECIES"])) # LW$AREA == TE$AREA[1]
i <- 1
for (i in 1:nrow(TE)) {
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "m") {
mean_length <- TE$LENGTH_CLASS[i] + 0.5
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "0") { # step: 0.5 cm
mean_length <- (TE$LENGTH_CLASS[i] + 2.5) / 10
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "1") { # step: 1 cm
mean_length <- (TE$LENGTH_CLASS[i] + 5) / 10
}
mean_weight <- A * mean_length^B
TE$mean_length[i] <- mean_length
TE$mean_weight[i] <- mean_weight # estimated weight
TE$perc_diff[i] <- (as.numeric(as.character(TE$INDIVIDUAL_WEIGHT[i])) - TE$mean_weight[i]) / as.numeric(as.character(TE$mean_weight[i])) * 100
if (abs(TE$perc_diff[i]) > 20) {
numberError <- numberError + 1
}
}
}
TE$mean_length
TE$GENUS
ab
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
if (nrow(TE_temp1) != 0) {
# tiff(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".tif", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 300, compression = "lzw", pointsize = 1 / 300)
jpeg(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".jpeg", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 200, quality=80)
par(mfrow = c(3, 1))
}
sex="F"
sex="M"
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
TE_temp
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
ab
ab
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
ab
for (i in 1:nrow(TE)) {
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]), ] #
if (nrow(ab)==0) {
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) , ] # & (LW$AREA==TE$AREA[1])
}
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "m") {
mean_length <- TE$LENGTH_CLASS[i] + 0.5
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "0") { # step: 0.5 cm
mean_length <- (TE$LENGTH_CLASS[i] + 2.5) / 10
} else if (as.character(TE$LENGTH_CLASSES_CODE[i]) == "1") { # step: 1 cm
mean_length <- (TE$LENGTH_CLASS[i] + 5) / 10
}
mean_weight <- A * mean_length^B
TE$mean_length[i] <- mean_length
TE$mean_weight[i] <- mean_weight # estimated weight
TE$perc_diff[i] <- (as.numeric(as.character(TE$INDIVIDUAL_WEIGHT[i])) - TE$mean_weight[i]) / as.numeric(as.character(TE$mean_weight[i])) * 100
if (abs(TE$perc_diff[i]) > 20) {
numberError <- numberError + 1
}
}
}
# scatter plots
# ii=26
for (ii in 1:length(species_to_plot)) {
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
if (nrow(TE_temp1) != 0) {
# tiff(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".tif", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 300, compression = "lzw", pointsize = 1 / 300)
jpeg(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".jpeg", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 200, quality=80)
par(mfrow = c(3, 1))
}
sex="M"
for (sex in c("M", "F", "I","N")) {
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
if (nrow(TE_temp) != 0) {
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
if (as.character(TE_temp$LENGTH_CLASSES_CODE[1]) == "m") {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (mm)", ylab = "weight (g)")
} else {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
}
lines(xx, yy, col = "blue")
}
} # fine sex
if (nrow(TE_temp1) != 0) {
dev.off()
}
} # fine ciclo for
numberError
sex="M"
sex="M"
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
TE_temp
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
TE_temp
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
ii
species_to_plot
ii=2
TE_temp1 <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii], ]
TE_temp1
if (nrow(TE_temp1) != 0) {
# tiff(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".tif", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 300, compression = "lzw", pointsize = 1 / 300)
jpeg(filename = file.path(wd, "Graphs", paste("check_individual_weight_", species_to_plot[ii], "_", TE$YEAR[1], ".jpeg", sep = "")), width = 8, height = 8, bg = "white", units = "in", res = 200, quality=80)
par(mfrow = c(3, 1))
}
sex="M"
TE_temp <- TE[paste(TE$GENUS, TE$SPECIES) == species_to_plot[ii] & as.character(TE$SEX) == sex, ]
TE_temp
if (nrow(TE_temp) != 0) {
ab <- LW[(LW$SPECIES == paste(TE_temp$GENUS[1], TE_temp$SPECIES[1])) & (as.character(LW$SEX) == as.character(TE_temp$SEX[1])), ] # & (LW$AREA==TE$AREA[1])
if (nrow(ab) != 0) {
A <- ab$a[1]
B <- ab$b[1]
}
xx <- as.numeric(as.character(unique(TE_temp$mean_length[order(as.numeric(as.character(TE_temp$mean_length)))])))
yy <- A * xx^B
if (as.character(TE_temp$LENGTH_CLASSES_CODE[1]) == "m") {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (mm)", ylab = "weight (g)")
} else {
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
}
lines(xx, yy, col = "blue")
}
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
plot(as.numeric(as.character(TE_temp$mean_length)), as.numeric(as.character(TE_temp$INDIVIDUAL_WEIGHT)), main = paste("Length-weight relationship ", paste(TE_temp$GENUS[1], TE_temp$SPECIES[1]), " ", sex, " - ", TE_temp$YEAR[1]), xlab = "length (cm)", ylab = "weight (g)")
source("~/GitHub/RoME/R/check_individual_weightTE.r", echo=TRUE)
check_individual_weightTE(DataTE = te, LW = ab_parameters, year, wd = wd, suffix = suffix, verbose = TRUE)
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])), ]
ab
ab <- LW[(LW$SPECIES == paste(TE$GENUS[i], TE$SPECIES[i])) & (as.character(LW$SEX) == as.character(TE$SEX[i])) & (LW$AREA==TE$AREA[1]) , ]
ab
source("~/GitHub/RoME/R/check_individual_weightTE.r", echo=TRUE)
library(RoME)
library(RoME)
source("D:/OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L/RDB/RoME_RDBFIS/data/MEDITS_GSA7/Medits_Issue5.R", echo=TRUE)
source("D:/OneDrive - Coispa Tecnologia & Ricerca S.C.A.R.L/RDB/RoME_RDBFIS/data/MEDITS_GSA7/Medits_Issue5.R", echo=TRUE)
ab_parameters
ab_parameters[ab_parameters$SPECIES=="SARD PIL",]
