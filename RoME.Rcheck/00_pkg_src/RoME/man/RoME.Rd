\name{RoME}
\alias{RoME}
\title{
R code to perform multiple checks on MEDITS Survey data (TA, TB, TC, TE and TL files)}
\description{
The function calls all the functions built in the package in an ordered way to perform a complete quality check of TX data available. The check is performed simultaneously on the files that can contain also data of more than one year.}
\usage{
RoME(TA,TB,TC,TE=NA,TL=NA,wd,suffix=NA,
create_RSufi_files = FALSE, create_global_RSufi_files=FALSE,
Year_start=NA,Year_end=NA,verbose =TRUE,Stratification=MEDITS::stratification_scheme, TM_list=TM_list,DataTargetSpecies=DataTargetSpecies,Maturity_parameters=Maturity_parameters,mat_stages=mat_stages,assTL=assTL)
}
\arguments{
  \item{TA}{Haul data table according to MEDITS protocol (TA)}
  \item{TB}{Catch data table according to MEDITS protocol (TB)}
  \item{TC}{Biological data table according to MEDITS protocol (TC)}
  \item{TE}{Individual biological data table according to MEDITS protocol (TE) if available, if TE data are not available, use NA.}
  \item{TL}{Litter data table according to MEDITS protocol (TL) if available, if TL data are not available, use NA}
  \item{wd}{working directory path defined by the user}
  \item{suffix}{Suffix string of the Logfile, in case it \code{suffix=NA} it is automatically generated by the function using date and time of the check}
  \item{create_RSufi_files}{boolean variables used to choose if create R-sufi files. The files are saved in the R-sufi directory and named with a suffix of the year and GSA}
  \item{create_global_RSufi_files}{boolean variables used to choose if global R-sufi files should be created from an year to another year}
  \item{Year_start}{numeric value indicating the starting year for the production of R-sufi file. This parameter must to be reported in case }
  \item{Year_end}{numeric value indicating the ending year for the production of R-sufi files}
  \item{verbose}{...}
  \item{Stratification}{Stratification scheme according to MEDITS protocol.}0
  \item{TM_list}{TM_list reference list}
  \item{DataTargetSpecies}{Information related to target species.}
  \item{Maturity_parameters}{Information related to sex and maturity from literature or other sources.}
  \item{mat_stages} {Table of maturity stages.}
  \item{assTL}{data frame with the association between TL (litter table) categories and sub-categories}
}
\details{
\code{RoME} checks can be used to integrate a list of common quality checks on survey data. This function calls all the functions built in the package in an ordered way to perform a complete quality check of TX data available. The order of the checks in \code{RoME} was implemented in a defined sequence to avoid cascade errors due to the correction of a previous error. No automatic correction is implemented in RoME. RoME stops if an error occurs; then the user has to correct the error and run again the code to continue with the other checks. The function runs on a complete time series dataset, checking year after year, until the end of the time series. After the checks of the mandatory fields and the controlled vocabulary, that are carried out for all the TX tables, the specific checks on each kind of TX table are performed. Finally, \code{RoME} provides a list of cross checks aimed to guarantee the consistency among the data tables.
}
\value{
The function does not correct the data, but it detects the errors, warning the user that there is the possibility of one or more errors, specifying the type of the error and easing the data correction. If parameter \code{verbose=TRUE} returns a series of text output in console to let the user to trace the state of the checks. All the output of the functions are stored in the user defined working directory  \code{wd} and in the sub-directory there resident. In the Lofile subfolder are stored the logfiles of each run of the function.
}
\references{Anonymus. 2017. MEDITS-Handbook. Version n. 9. MEDITS Working Group. 106 pp. https://www.sibm.it/MEDITS 2011/principaledownload.htm}
\author{I. Bitetto, W. Zupa}
\examples{
    \donttest{
    library(RoME)
    wd <- tempdir()
    suffix=NA
    DataTA = RoME::TA
    DataTB = RoME::TB
    DataTC = RoME::TC
    DataTE = RoME::TE
    DataTL = RoME::TL
    RoME(DataTA, DataTB,DataTC,DataTE,DataTL, wd, suffix,Stratification=MEDITS::stratification_scheme, TM_list=RoME::TM_list,DataTargetSpecies=RoME::DataTargetSpecies,Maturity_parameters=RoME::Maturity_parameters,mat_stages=RoME::mat_stages,assTL=RoME::assTL)
    }
}

\keyword{error}
