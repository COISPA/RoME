* using log directory 'C:/RoME/RoME/RoME.Rcheck'
* using R version 3.6.1 (2019-07-05)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* using options '--no-manual --as-cran'
* checking for file 'RoME/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'RoME' version '0.1.0'
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... WARNING
Found the following file with a non-portable file name:
  sampling_individual_measures_ 2012 .csv
These are not fully portable file names.
See section 'Package structure' in the 'Writing R Extensions' manual.
* checking whether package 'RoME' can be installed ... WARNING
Found the following significant warnings:
  Warning: package 'timeDate' was built under R version 3.6.2
See 'C:/RoME/RoME/RoME.Rcheck/00install.out' for details.
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... NOTE
Non-standard file/directory found at top level:
  'sampling_individual_measures_ 2012 .csv'
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
Found an obsolete/platform-specific call in the following function:
  'check_weight'
Found the platform-specific device:
  'windows'
dev.new() is the preferred way to open a new device, in the unlikely
event one is needed.
check_distance: warning in tiff(file = paste(wd, "/Graphs/haul ",
  ResultData[j, "HAUL_NUMBER"], " AREA ", ResultData[1, "AREA"], "_",
  ResultData[1, "YEAR"], ".tiff", sep = ""), width = 12, height = 8, bg
  = "white", units = "in", res = 300, compression = "lzw", pointsize =
  1/300): partial argument match of 'file' to 'filename'
check_individual_weightTE: warning in tiff(file = paste(wd,
  "/Graphs/check_individual_weight_", species_to_plot[ii], "_",
  TE$YEAR[1], ".tif", sep = ""), width = 8, height = 8, bg = "white",
  units = "in", res = 300, compression = "lzw", pointsize = 1/300):
  partial argument match of 'file' to 'filename'
check_position: warning in tiff(file = paste(wd,
  "/Graphs/hauls_position ", ResultData$YEAR[1], " AREA ",
  ResultData$AREA[1], ".tiff", sep = ""), width = img_width, height =
  img_height, bg = "white", units = "in", res = 300, compression =
  "lzw", pointsize = 1/300): partial argument match of 'file' to
  'filename'
check_position: warning in tiff(file = paste(wd,
  "/Graphs/Start_position ", ResultData$YEAR[1], " AREA ",
  ResultData$AREA[1], ".tiff", sep = ""), width = img_width, height =
  img_height, bg = "white", units = "in", res = 300, compression =
  "lzw", pointsize = 1/300): partial argument match of 'file' to
  'filename'
check_position: warning in tiff(file = paste(wd, "/Graphs/End_position
  ", ResultData$YEAR[1], " AREA ", ResultData$AREA[1], ".tiff", sep =
  ""), width = img_width, height = img_height, bg = "white", units =
  "in", res = 300, compression = "lzw", pointsize = 1/300): partial
  argument match of 'file' to 'filename'
check_temperature: warning in tiff(file = paste(wd,
  "/Graphs/temperature_control_", Dataset$YEAR[1], "_AREA_",
  Dataset$AREA[1], ".tiff", sep = ""), width = 12, height = 8, bg =
  "white", units = "in", res = 300, compression = "lzw", pointsize =
  1/300): partial argument match of 'file' to 'filename'
check_weight: warning in tiff(file = paste(wd,
  "/Graphs/check_mean_weight_", Result$AREA[1], "_", Result$YEAR[1],
  "_", i, ".tif", sep = ""), width = 12, height = 8, bg = "white",
  units = "in", res = 300, compression = "lzw", pointsize = 1/300):
  partial argument match of 'file' to 'filename'
graphs_TA: warning in tiff(file = paste(wd,
  "/Graphs/qualitative_control_TA_", ResultData$YEAR[1], "_AREA_",
  ResultData$AREA[1], ".tif", sep = ""), width = 8, height = 12, bg =
  "white", units = "in", res = 300, compression = "lzw", pointsize =
  1/300): partial argument match of 'file' to 'filename'
RoME: no visible binding for '<<-' assignment to 'Errors'
RoME: no visible binding for global variable 'Errors'
RoME: no visible binding for global variable 'DataSpecies'
RoME: no visible binding for global variable 'Type_of_files'
RoME: no visible binding for global variable 'DataTA'
RoME: no visible binding for global variable 'DataTB'
RoME: no visible binding for global variable 'DataTC'
RoME: no visible binding for global variable 'Format'
RoME: no visible global function definition for 'check_weight_tot_nb'
RoME: no visible binding for global variable 'DataTargetSpecies'
RoME: no visible global function definition for 'graphics.off'
RoME: no visible binding for global variable 'DataTL'
RoME: no visible global function definition for 'read.table'
RoME: no visible binding for global variable 'create_RSufi_files'
RoME: no visible binding for global variable 'Stratification'
RoME: no visible binding for global variable 'AREA'
RoME: no visible binding for global variable 'DataTT_bkp'
RoME: no visible binding for global variable 'DataTD_bkp'
RoME: no visible binding for global variable 'DataTE_bkp'
RoME: no visible binding for global variable
  'create_global_RSufi_files'
check_area: no visible binding for global variable 'GSAs'
graphs_TA: no visible global function definition for 'mtext'
Undefined global functions or variables:
  AREA DataSpecies DataTA DataTB DataTC DataTD_bkp DataTE_bkp DataTL
  DataTT_bkp DataTargetSpecies Errors Format GSAs Stratification
  Type_of_files check_weight_tot_nb create_RSufi_files
  create_global_RSufi_files graphics.off mtext read.table
Consider adding
  importFrom("grDevices", "graphics.off")
  importFrom("graphics", "mtext")
  importFrom("utils", "read.table")
to your NAMESPACE file.

Found the following assignments to the global environment:
File 'RoME/R/RoME.r':
  assign("Format", value = "from_2012", envir = .GlobalEnv)
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  'GSAs' 'RSufi_files'
Undocumented data sets:
  'GSAs'
All user-level objects in a package should have documentation entries.
See chapter 'Writing R documentation files' in the 'Writing R
Extensions' manual.
* checking for code/documentation mismatches ... WARNING
Functions or methods with usage in documentation object 'Rsufi_files' but not in code:
  'Rsufi_files'

* checking Rd \usage sections ... OK
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of 'data' directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... ERROR
Running examples in 'RoME-Ex.R' failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: RoME
> ### Title: R code to perform multiple checks on MEDITS Survey data (TA, TB,
> ###   TC, TE and TL files)
> ### Aliases: RoME
> ### Keywords: error
> 
> ### ** Examples
> 
>     wd <- tempdir()
>     suffix="2020-03-05_time h17m44s55"
>     DataTA = RoME::TA
>     DataTB = RoME::TB
>     DataTC = RoME::TC
>     DataTE = RoME::TE
>     DataTL = RoME::TL
>     RoME(DataTA, DataTB,DataTC,DataTE,DataTL, wd, suffix)
[1] Checking year  1994
[1] Check identical record TA in progress...
[1] Check identical record TA successfully completed!
[1] Check identical record TB in progress...
Error in if (Result[1, "TYPE_OF_FILE"] == "TA") { : 
  missing value where TRUE/FALSE needed
Calls: RoME -> check_identical_records
Execution halted
** found \donttest examples: check also with --run-donttest
* DONE
Status: 1 ERROR, 4 WARNINGs, 2 NOTEs
