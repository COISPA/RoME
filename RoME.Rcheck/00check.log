* using log directory 'D:/Documents and Settings/Utente/Documenti/GitHub/RoME/RoME.Rcheck'
* using R version 3.6.2 (2019-12-12)
* using platform: x86_64-w64-mingw32 (64-bit)
* using session charset: ISO8859-1
* using options '--no-manual --as-cran'
* checking for file 'RoME/DESCRIPTION' ... OK
* checking extension type ... Package
* this is package 'RoME' version '0.1.0'
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking whether package 'RoME' can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... OK
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... NOTE
'library' or 'require' call to 'MEDITS' which was already attached by Depends.
  Please remove these calls from your code.
Package in Depends field not imported from: 'MEDITS'
  These packages need to be imported from (in the NAMESPACE file)
  for when this namespace is loaded but not attached.
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
check_distance: warning in tiff(file = paste(wd, "/Graphs/haul ",
  ResultData$HAUL_NUMBER[j], " AREA ", ResultData$AREA[1], "_",
  ResultData$YEAR[1], ".tif", sep = ""), width = 11.7, height = 8.27,
  bg = "white", units = "in", res = 300, compression = "lzw", pointsize
  = 1/300): partial argument match of 'file' to 'filename'
check_distance: no visible global function definition for
  'MEDITS.to.dd'
check_distance: no visible global function definition for 'dd.distance'
check_distance: no visible global function definition for 'map'
check_dm: no visible binding for global variable 'Errors'
check_species_TBTC: no visible binding for global variable
  'DataTargetSpecies'
check_stratum_code: no visible binding for global variable 'Format'
check_stratum_code: no visible binding for global variable
  'ResultDataTT'
check_stratum_code: no visible binding for global variable
  'ResultDataTA'
check_stratum_code: no visible binding for global variable 'Errors'
check_stratum_code: no visible global function definition for
  'read.csv'
check_stratum_code: no visible binding for global variable
  'Stratification'
Undefined global functions or variables:
  DataTargetSpecies Errors Format MEDITS.to.dd ResultDataTA
  ResultDataTT Stratification dd.distance map read.csv
Consider adding
  importFrom("utils", "read.csv")
to your NAMESPACE file.
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented code objects:
  'check_dm' 'check_stratum_code'
All user-level objects in a package should have documentation entries.
See chapter 'Writing R documentation files' in the 'Writing R
Extensions' manual.
* checking for code/documentation mismatches ... WARNING
Codoc mismatches from documentation object 'check_stratum':
check_stratum
  Code: function(ResultData, wd, suffix)
  Docs: function(ResultDataTA, wd, suffix)
  Argument names in code not in docs:
    ResultData
  Argument names in docs not in code:
    ResultDataTA
  Mismatches in argument names:
    Position: 1 Code: ResultData Docs: ResultDataTA

* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'check_species_TBTC'
  'ResultTB' 'ResultTC' 'DataSpecies'
Documented arguments not in \usage in documentation object 'check_species_TBTC':
  'ResultDataTB' 'ResultDataTC' 'DataTargetSpecies'

Undocumented arguments in documentation object 'check_step_length_distr'
  'ResultData'
Documented arguments not in \usage in documentation object 'check_step_length_distr':
  'ResultDataTC'

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter 'Writing R documentation files' in the 'Writing R
Extensions' manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of 'data' directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking examples ... ERROR
Running examples in 'RoME-Ex.R' failed
The error most likely occurred in:

> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: check_step_length_distr
> ### Title: Function the verifies that in TC the length measures are
> ###   repoerted with the correct precision.
> ### Aliases: check_step_length_distr
> ### Keywords: length, step
> 
> ### ** Examples
> 
> library(MEDITS)
> library(RoME)
> wd=tempdir()
> suffix= "27-02-2020 18:30"
> check_step_length_distr(TC,wd,suffix)
Error in if (as.character(fishes_cefalopods$LENGTH_CLASSES_CODE[j]) ==  : 
  missing value where TRUE/FALSE needed
Calls: check_step_length_distr
Execution halted
** found \donttest examples: check also with --run-donttest
* checking for detritus in the temp directory ... OK
* DONE
Status: 1 ERROR, 3 WARNINGs, 2 NOTEs
